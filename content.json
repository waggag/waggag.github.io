{"meta":{"title":"Singular港","subtitle":"","description":"","author":"王港","url":"http://example.com","root":"/"},"pages":[],"posts":[{"title":"Test","slug":"test","date":"2021-08-14T20:30:29.509Z","updated":"2021-08-14T20:30:49.205Z","comments":true,"path":"2021/08/15/test/","link":"","permalink":"http://example.com/2021/08/15/test/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. 一、前提条件1.1、Docker操作系统要求 Ubuntu Eoan 19.10 Ubuntu Bionic 18.04（LTS） Ubuntu Xenial 16.04（LTS） 1.2、卸载旧的版本（如果安装过旧的版本） 1sudo apt-get remove docker docker-engine docker.io containerd runc 二、Ubuntu18.04安装Docker2.1、安装方法 大多数用户会 设置Docker的存储库并从中进行安装，以简化安装和升级任务。这是推荐的方法。 一些用户下载并手动安装 DEB软件包， 并完全手动管理升级。这在诸如在无法访问互联网的空白系统上安装Docker的情况下很有用。 在测试和开发环境中，一些用户选择使用自动 便利脚本来安装Docker。 2.2、使用存储库安装2.2.1、设置存储库 12345678910//更新apt软件包索引sudo apt-get update//安装软件包以允许apt通过HTTPS使用存储库sudo apt-get install \\ apt-transport-https \\ ca-certificates \\ curl \\ gnupg-agent \\ software-properties-common 2.2.2、添加Docker的官方GPG密钥 1curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - 验证是否拥有指定的密钥 1apt-key fingerprint 0EBFCD88 2.2.3、使用以下命令来设置稳定的存储库。要添加每晚或测试存储库，请在以下命令中的单词后面添加nightly或test（或两者）stable。 12345// X86_64/amd64平台下设置存储库sudo add-apt-repository \\ &quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu \\ $(lsb_release -cs) \\ stable&quot; 2.2.4、安装Docker1、更新apt程序包索引，并安装最新版本的Docker Engine和容器 12sudo apt-get updatesudo apt-get install docker-ce docker-ce-cli containerd.io 2、安装指定版本的Docker(1)、 查询仓库中可用的Docker版本 12345678910111213141516171819202122232425262728sudo apt-cache madison docker-ce//可用版本 docker-ce | 5:19.03.8~3-0~ubuntu-bionic | https://download.docker.com/linux/ubuntu bionic/stable amd64 Packages docker-ce | 5:19.03.7~3-0~ubuntu-bionic | https://download.docker.com/linux/ubuntu bionic/stable amd64 Packages docker-ce | 5:19.03.6~3-0~ubuntu-bionic | https://download.docker.com/linux/ubuntu bionic/stable amd64 Packages docker-ce | 5:19.03.5~3-0~ubuntu-bionic | https://download.docker.com/linux/ubuntu bionic/stable amd64 Packages docker-ce | 5:19.03.4~3-0~ubuntu-bionic | https://download.docker.com/linux/ubuntu bionic/stable amd64 Packages docker-ce | 5:19.03.3~3-0~ubuntu-bionic | https://download.docker.com/linux/ubuntu bionic/stable amd64 Packages docker-ce | 5:19.03.2~3-0~ubuntu-bionic | https://download.docker.com/linux/ubuntu bionic/stable amd64 Packages docker-ce | 5:19.03.1~3-0~ubuntu-bionic | https://download.docker.com/linux/ubuntu bionic/stable amd64 Packages docker-ce | 5:19.03.0~3-0~ubuntu-bionic | https://download.docker.com/linux/ubuntu bionic/stable amd64 Packages docker-ce | 5:18.09.9~3-0~ubuntu-bionic | https://download.docker.com/linux/ubuntu bionic/stable amd64 Packages docker-ce | 5:18.09.8~3-0~ubuntu-bionic | https://download.docker.com/linux/ubuntu bionic/stable amd64 Packages docker-ce | 5:18.09.7~3-0~ubuntu-bionic | https://download.docker.com/linux/ubuntu bionic/stable amd64 Packages docker-ce | 5:18.09.6~3-0~ubuntu-bionic | https://download.docker.com/linux/ubuntu bionic/stable amd64 Packages docker-ce | 5:18.09.5~3-0~ubuntu-bionic | https://download.docker.com/linux/ubuntu bionic/stable amd64 Packages docker-ce | 5:18.09.4~3-0~ubuntu-bionic | https://download.docker.com/linux/ubuntu bionic/stable amd64 Packages docker-ce | 5:18.09.3~3-0~ubuntu-bionic | https://download.docker.com/linux/ubuntu bionic/stable amd64 Packages docker-ce | 5:18.09.2~3-0~ubuntu-bionic | https://download.docker.com/linux/ubuntu bionic/stable amd64 Packages docker-ce | 5:18.09.1~3-0~ubuntu-bionic | https://download.docker.com/linux/ubuntu bionic/stable amd64 Packages docker-ce | 5:18.09.0~3-0~ubuntu-bionic | https://download.docker.com/linux/ubuntu bionic/stable amd64 Packages docker-ce | 18.06.3~ce~3-0~ubuntu | https://download.docker.com/linux/ubuntu bionic/stable amd64 Packages docker-ce | 18.06.2~ce~3-0~ubuntu | https://download.docker.com/linux/ubuntu bionic/stable amd64 Packages docker-ce | 18.06.1~ce~3-0~ubuntu | https://download.docker.com/linux/ubuntu bionic/stable amd64 Packages docker-ce | 18.06.0~ce~3-0~ubuntu | https://download.docker.com/linux/ubuntu bionic/stable amd64 Packages docker-ce | 18.03.1~ce~3-0~ubuntu | https://download.docker.com/linux/ubuntu bionic/stable amd64 Packages (2)、安装指定的版本（使用上面查询出的可用版本：如（18.06.3ce3-0~ubuntu）） 1234sudo apt-get install docker-ce=&lt;VERSION_STRING&gt; docker-ce-cli=&lt;VERSION_STRING&gt; containerd.io//例如sudo apt-get install docker-ce=&lt;18.06.3~ce~3-0~ubuntu&gt; docker-ce-cli=&lt;18.06.3~ce~3-0~ubuntu&gt; containerd.io 2.2.5、测试是否正确安装Docker 12//如下即代表安装成功sudo docker run hello-world 2.3、从软件包安装2.3.1、下载.deb文件安装 Docker下载地址根据你的Ubuntu版本，然后浏览pool/stable/，选择合适的版本下载2.3.2、安装Docker 12//安装你下载的文件，Docker守护程序会自动启动sudo dpkg -i package.deb 2.3.3、通过HelloWorld来测试，同上 1sudo docker run hello-world 2.4、使用脚本安装Docker(不推荐) 12345//设置脚本，运行脚本curl -fsSL https://get.docker.com -o get-docker.sh//运行脚本sudo sh get-docker.sh 2.5、使用非Root用户使用Docker(将用户添加到“ docker”组) 12345//创建Docker组sudo groupadd docker//添加用户到docker组sudo usermod -aG docker waggag Tips: Docker社区已安装。它会自动在DEB基于发行版的系统上启动。在 RPM基于发行版的系统上，您需要使用相应的systemctl或service命令手动启动它 。如消息所示，默认情况下，非root用户不能运行Docker命令。 3、卸载Docker3.1、卸载Docker，CLI和Containerd软件包 1sudo apt-get purge docker-ce docker-ce-cli containerd.io 3.2、主机上的映像，容器，卷或自定义配置文件不会自动删除。要删除所有图像，容器和卷 12// 必须手动删除所有已编辑的配置文件sudo rm -rf /var/lib/docker 4、官网教程(推荐查看，个人最喜欢看官网文档，了解的比较详细) https://docs.docker.com/engine/install/ubuntu/二、常见问题1、docker安装后出现Cannot connect to the Docker daemon. 1234567891011# 先切换到root用户, 再执行以下命令su root # 开机自动启动dockersystemctl enable docker # 启动dockersystemctl start docker # 重启dokcersystemctl restart docker","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2021-08-14T20:28:11.114Z","updated":"2021-08-14T20:28:11.114Z","comments":true,"path":"2021/08/15/hello-world/","link":"","permalink":"http://example.com/2021/08/15/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[]}